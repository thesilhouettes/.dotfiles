#!/bin/zsh

# profile file. Runs on login. Environmental variables are set here.

# Default programs:
export EDITOR="nvim"
export TERMINAL="alacritty"

# browsers
export BROWSER="brave"
# for karma test engine
export CHROM_BIN="brave"
# don't do this for firefox, I am just using the fact that
# brave is chromium
export CHROME_EXECUTABLE="$BROWSER"

# some applications will respect this specification
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"

# xinit path if you don't use display managers
export XINITRC="$XDG_CONFIG_HOME/x11/xinitrc"
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
#export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority" # This line will break some DMs.

# z shell related
export INPUTRC="$XDG_CONFIG_HOME/shell/inputrc"
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
export ZSH="$XDG_DATA_HOME/oh-my-zsh"
export HISTFILE="$XDG_DATA_HOME/history"

# some applications just do not care about XDG environment variables
export NOTMUCH_CONFIG="$XDG_CONFIG_HOME/notmuch-config"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
export LESSHISTFILE="-"
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/default"
export KODI_DATA="$XDG_DATA_HOME/kodi"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"

export UNISON="$XDG_DATA_HOME/unison"
export WEECHAT_HOME="$XDG_CONFIG_HOME/weechat"
export MBSYNCRC="$XDG_CONFIG_HOME/mbsync/config"
export ELECTRUMDIR="$XDG_DATA_HOME/electrum"
export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export XCURSOR_PATH=/usr/share/icons:"$XDG_DATA_HOME/icons"

# for rust and the rustup installer
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export GOPATH="$XDG_DATA_HOME/go"
# for some reason go can't find them??
export GO_EXES="$XDG_DATA_HOME/go/bin"
export ANDROID_HOME="$XDG_DATA_HOME/Android"
export ANDROID_USER_HOME="$XDG_DATA_HOME"/android
export ANSIBLE_CONFIG="$XDG_CONFIG_HOME/ansible/ansible.cfg"
export DENO_DIR="$XDG_DATA_HOME/deno"
export DENO_INSTALL_ROOT="$DENO_DIR"
export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export RUBY_LOCAL="$XDG_DATA_HOME/gem/ruby/3.0.0/bin"
export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME"/bundle
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME"/bundle
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME"/bundle
export OPAMROOT="$XDG_DATA_HOME/opam"

# Other program settings:
export DICS="/usr/share/stardict/dic/"
export SUDO_ASKPASS="$HOME/.local/bin/dmenupass"
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"
export LESS=-R
# export LESS_TERMCAP_mb="$(printf '%b' '[1;31m')"
# export LESS_TERMCAP_md="$(printf '%b' '[1;36m')"
# export LESS_TERMCAP_me="$(printf '%b' '[0m')"
# export LESS_TERMCAP_so="$(printf '%b' '[01;44;33m')"
# export LESS_TERMCAP_se="$(printf '%b' '[0m')"
# export LESS_TERMCAP_us="$(printf '%b' '[1;32m')"
# export LESS_TERMCAP_ue="$(printf '%b' '[0m')"
export LESSOPEN="| /usr/bin/highlight -O ansi %s 2>/dev/null"
export QT_QPA_PLATFORMTHEME="gtk2"	# Have QT use gtk2 theme.
export MOZ_USE_XINPUT2="1"		# Mozilla smooth scrolling/touchpads.
export AWT_TOOLKIT="MToolkit wmname LG3D"	#May have to install wmname
export _JAVA_AWT_WM_NONREPARENTING=1	# Fix for Java applications in dwm
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME/java"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export GNGPGHOME="$XDG_DATA_HOME/gnpug"

# the psqlrc file for psql
export PSQLRC="$XDG_CONFIG_HOME/psql/psqlrc"
# use the simple theme
export PSQL_PAGER="pspg -s 16"
export PSQL_HISTORY="$XDG_DATA_HOME/psql_history"

# tell vscodium to use vscode's marketplace - don't know if it is against the terms or not
export VSCODE_GALLERY_SERVICE_URL='https://marketplace.visualstudio.com/_apis/public/gallery'
export VSCODE_GALLERY_CACHE_URL='https://vscode.blob.core.windows.net/gallery/index'
export VSCODE_GALLERY_ITEM_URL='https://marketplace.visualstudio.com/items'
export VSCODE_GALLERY_CONTROL_URL=''
export VSCODE_GALLERY_RECOMMENDATIONS_URL=''

#if pacman -Qs libxft-bgra >/dev/null 2>&1; then
#	# Start graphical server on user's current tty if not already running.
#	[ "$(tty)" = "/dev/tty1" ] && ! pidof -s Xorg >/dev/null 2>&1 && exec startx "$XINITRC"
#else
#	echo "\033[31mIMPORTANT\033[0m: Note that \033[32m\`libxft-bgra\`\033[0m must be installed for this build of dwm.
#Please run:
#	\033[32myay -S libxft-bgra-git\033[0m
#and replace \`libxft\`. Afterwards, you may start the graphical server by running \`startx\`."
#fi

# Switch escape and caps if tty and no passwd required:
#sudo -n loadkeys ${XDG_DATA_HOME}/larbs/ttymaps.kmap 2>/dev/null

# PATH varaibles
export PATH=$PATH:$HOME/.local/scripts:$HOME/.local/bin:$HOME/.local/share/npm/bin:$DENO_DIR/bin:$GO_EXES:$RUBY_LOCAL

# rustup shell setup
# affix colons on either side of $PATH to simplify matching
case ":${PATH}:" in
    *:"$HOME/.local/share/cargo/bin":*)
        ;;
    *)
        # Prepending path in case a system-installed rustc needs to be overridden
        export PATH="$HOME/.local/share/cargo/bin:$PATH"
        ;;
esac


# node version manager
export NVM_DIR="$([ -z "$XDG_CONFIG_HOME" ] && printf %s "$HOME/.nvm" || printf %s "$XDG_CONFIG_HOME/nvm")"
# this will make nvm work on demand
alias nvm="unalias nvm; [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"; nvm $@"
# texlive
export TEXMFVAR="$XDG_CACHE_HOME/texlive/texmf-var"
# ruby
export RBENV_ROOT="$XDG_DATA_HOME/rbenv"
# python
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"
export IPYTHONDIR="$XDG_CONFIG_HOME/ipython"
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"

# remove duplicates - I don't know why it has so many of them??
typeset -U PATH

# start desktop environment or window manager in wayland
if [ -z "$DISPLAY" ] && [ "$XDG_VTNR" -eq 1 ]; then
   waylandkde 
fi
